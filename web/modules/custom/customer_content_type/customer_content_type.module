<?php
use \Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\InvokeCommand;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\Core\Ajax;

/**
 * @ignore
 */
function customer_content_type_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
	if ( $form_id === 'node_customer_form' || $form_id === 'node_customer_edit_form' ) {
		$node = $form_state->getFormObject()->getEntity();
		if ( $node->isNew() ) {
			$customer_id = "CU-" . date("Ymd");
			while (true) {
				$query = \Drupal::entityQuery("node")
                    					->condition('type', 'customer')
										->condition('title', '$customer_id', "CONTAINS")
                    					->execute();

				$customer_id .=  "-" . (count($query)+ 1);
				$check = \Drupal::entityQuery("node")
                    					->condition('type', 'customer')
                    					->condition('title', $customer_id)
                    					->execute();
				if ( sizeof($check) == 0 ) {
					break;
				}
			}
			$form ['title']['widget'][0]['value']['#default_value'] = $customer_id;
		} else {
			$current_user = \Drupal::currentUser();
			$roles = $current_user->getRoles();
			if ( !in_array("manager", $roles) && !in_array("administrator", $roles) ) {
				$form ['title']['#disabled'] = true;
			}
		}

		$form['title']['widget'][0]['value']['#ajax'] = array(
                'callback' => 'ajax_check_customer_unique_id',
				'event' => 'change',
        );

        $form['title_message'] = array(
			'#type' => 'markup',
			'#markup' => '<div class="title-message"></div>',
            '#weight' => 0,
        );

		$form['contact_window'] = array(
						'#type' => 'details',
						'#title' => t('聯絡人資訊'),
						'#weight' => 10,
							'#open' => true,
        );
		$form['field_contact_person']['#group'] = 'contact_window';
		$form['field_mobile']['#group'] = 'contact_window';
	}
}

/**
 * @ignore
 */
function ajax_check_customer_unique_id(array $form, FormStateInterface $form_state) {
	$ajax_response = new AjaxResponse();
	$title = $form_state->getValue('title')[0]['value'];
    
    $ajax_response->addCommand(new HtmlCommand('.title-message', ''));
    $query = \Drupal::entityQuery("node")->condition('type', 'customer')->condition('title', $title)->execute();
    if ( count($query) > 0 ) {
        $ajax_response->addCommand(new HtmlCommand('.title-message', '<font color="red">客戶編號重複, 請重新命名</font>'));
        $ajax_response->addCommand(new InvokeCommand('#edit-title-0-value', 'val', [""]));
    }
    
	return $ajax_response;
}

/**
 * @ignore
 */function customer_content_type_node_presave(Drupal\Core\Entity\EntityInterface $node){
}

/**
 * generate customer unique id. 
 *
 * @param int $length - id length
 * @return string 
 */
function gen_cu_id($length = 6) {
    $characters = '0123456789';
    $charactersLength = strlen($characters);
    $randomString = '';
    for ($i = 0; $i < $length; $i++) {
        $randomString .= $characters[rand(0, $charactersLength - 1)];
    }
    return "CU" . $randomString;
}




