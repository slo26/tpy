<?php
use \Drupal\Core\Form\FormStateInterface;

function goods_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
    if ( $form_id == "node_goods_form" || $form_id == "node_goods_edit_form" ) {
        $node = $form_state->getFormObject()->getEntity();
        //if ( $node->isNew() ) {
            //$unique_id = generate_unique_id_for_goods();
        //    $form ['title']['widget'][0]['value']['#default_value'] = $unique_id;
        //}
        //$form ['title']['#disabled'] = true;
        $form['title']['widget'][0]['value']['#ajax'] = array(
                'callback' => 'ajax_check_goods_unique_id',
				'event' => 'change',
        );

        if ( !$node->isNew() ) {
            $parent_products = array();
            $product_nids = \Drupal::entityQuery("node")
                                    ->condition('type', 'product')
                                    ->condition('field_product_goods', $node->id())->execute();
            foreach($product_nids as $product_nid) {
                $product = \Drupal\node\Entity\Node::load($product_nid);
                $parent_products[] = $product->title->value;

            }
            $form['parent_products']['#markup'] = '<div class="parent-products"><strong>主成品: </strong>' . implode(",", $parent_products) . '</div>';
            $form['parent_products']['#weight'] = 1;
            $form ['title']['#disabled'] = true;
        }

        $form['title_message'] = array(
			'#type' => 'markup',
			'#markup' => '<div class="title-message"></div>',
            '#weight' => 2,
        );
    }
}

function ajax_check_goods_unique_id(array $form, FormStateInterface $form_state) {
	$ajax_response = new AjaxResponse();
	$title = $form_state->getValue('title')[0]['value'];
    
    $ajax_response->addCommand(new HtmlCommand('.title-message', ''));
    $query = \Drupal::entityQuery("node")->condition('type', 'goods')->condition('title', trim($title))->execute();
    if ( count($query) > 0 ) {
        $ajax_response->addCommand(new HtmlCommand('.title-message', '<font color="red">零件/物品編號重複, 請重新命名</font>'));
        $ajax_response->addCommand(new InvokeCommand('#edit-title-0-value', 'val', [""]));
    }
    
	return $ajax_response;
}

/*function generate_unique_id_for_goods() {
    $query = \Drupal::entityQuery("node")->condition('type', 'goods')->execute();
    $index = count($query);
    while (true) {
        $index = $index + 1;
        $unique_id = "G-" . str_pad($index, 5,"0",STR_PAD_LEFT);
        $query = \Drupal::entityQuery("node")
                                ->condition('type', 'goods')
                                ->condition('title', $unique_id)
                                ->execute();
        if ( count($query) == 0 ) {
            break;
        }
    }
    return $unique_id;
}*/


